<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <property name="server_name" value="dover-foo"/>
    <property name="log_dir" value="/data/projects/dover-foo"/>
    <property name="maxFileSize" value="500MB"/>
    <property name="maxHistory" value="7"/>

    
    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%date{yyyy-MM-dd HH:mm:ss} | %-5level | %thread | ${server_name} | [%X{trace-id}] | %logger | %msg%n</pattern>
        </encoder>
    </appender>
    
    <!-- info日志 appender  -->
    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 按天回滚 daily -->
            <fileNamePattern>${log_dir}/${server_name}-%d{yyyy-MM-dd}-%i.log</fileNamePattern>
            <!-- 日志最大的历史 7天 -->
            <maxHistory>${maxHistory}</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!-- maxFileSize:这是活动文件的大小，默认值是10MB，这里设置为50MB -->
                <maxFileSize>${maxFileSize}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符-->
            <pattern>%date{yyyy-MM-dd HH:mm:ss} | %-5level | %thread | ${server_name} | [%X{trace-id}] | %logger | %msg%n</pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    
    <!--异步输出日志-->
    <appender name="ASYNC-STDOUT" class="ch.qos.logback.classic.AsyncAppender">
        <!--不丢失日志，默认的，如果队列的80%已满，则会丢弃TRACT、DEBUG、INFO级别的日志-->
        <!--<discardingThreshold>0</discardingThreshold>-->
        <!--更改默认的队列深度，改值会影响性能，默认值256-->
        <queueSize>512</queueSize>
        <!-- 避免业务线程的阻塞-->
        <neverBlock>true</neverBlock>
        <!--添加附加的appender，最多只能添加一个-->
        <appender-ref ref="STDOUT"/>
    </appender>
    
    <!--异步输出日志-->
    <appender name="ASYNC-INFO" class="ch.qos.logback.classic.AsyncAppender">
        <!--不丢失日志，默认的，如果队列的80%已满，则会丢弃TRACT、DEBUG、INFO级别的日志-->
        <!--<discardingThreshold>0</discardingThreshold>-->
        <!--更改默认的队列深度，改值会影响性能，默认值256-->
        <queueSize>512</queueSize>
        <!-- 避免业务线程的阻塞-->
        <neverBlock>true</neverBlock>
        <!--添加附加的appender，最多只能添加一个-->
        <appender-ref ref="INFO"/>
    </appender>


    <!--默认所有的包以info-->
    <root level="INFO" additivity="false">
        <appender-ref ref="ASYNC-STDOUT"/>
        <appender-ref ref="ASYNC-INFO"/>
    </root>

    <!--mybatis sql日志 日志的级别需要是DEBUG-->
    <!--日志打印的包的范围，及分类日志文件存储 -->
    <logger name="com.dover.mes" level="DEBUG" additivity="false">
        <appender-ref ref="ASYNC-STDOUT"/>
        <appender-ref ref="ASYNC-INFO"/>
    </logger>

</configuration>
